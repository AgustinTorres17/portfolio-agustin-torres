<section id="projects">
  <h2>Projects üìù</h2>
  <ul class="project-list">
    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Oneplify</h3>
          <div class="slider-container">
            <ul class="slider-track">
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify1.png"
                  alt="Oneplify screenshot 1"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify2.png"
                  alt="Oneplify screenshot 2"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify3.png"
                  alt="Oneplify screenshot 3"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify4.png"
                  alt="Oneplify screenshot 4"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify5.png"
                  alt="Oneplify screenshot 5"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify6.png"
                  alt="Oneplify screenshot 6"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify7.png"
                  alt="Oneplify screenshot 7"
                />
              </li>
            </ul>
          </div>
          <p>
            Oneplify is a web application developed with my Software Engineering
            Project team. <br /> It enables the management of employee leave at GoGrow,
            provides access to their salary history, and allows users to view the
            anniversaries and birthdays of other employees, as well as their current
            status (e.g., whether they are on leave, celebrating a birthday, or marking
            a company anniversary), among many other features.
            <br />My role was Frontend lead. I was in charge of the development
            of the user interface and the integration with the backend.
          </p>
          <ul class="tech-list">
            <li>NextJS</li>
            <li>ShadCN</li>
            <li>Typescript</li>
            <li>Ruby On Rails</li>
            <li>PostgreSQL</li>
            <li>Tailwind</li>
          </ul>
        </div>
      </div>
    </li>
    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Peliculeando</h3>
          <div class="slider-container">
            <ul class="slider-track">
              <li class="slider-item">
                <img src="/webir/webir1.png" alt="Webir screenshot 1" />
              </li>
              <li class="slider-item">
                <img src="/webir/webir2.png" alt="Webir screenshot 2" />
              </li>
              <li class="slider-item">
                <img src="/webir/webir3.png" alt="Webir screenshot 3" />
              </li>
              <li class="slider-item">
                <img src="/webir/webir4.png" alt="Webir screenshot 4" />
              </li>
              <li class="slider-item">
                <img src="/webir/webir5.png" alt="Webir screenshot 5" />
              </li>
              <li class="slider-item">
                <img src="/webir/webir6.png" alt="Webir screenshot 6" />
              </li>
            </ul>
          </div>
          <p>
            A web page that allows you to search for movies and TV shows by name
            and genre, providing detailed information such as directors, main
            actors, synopsis, and more. <br />It integrates Google‚Äôs Gemini AI
            for personalized movie recommendations, enabling the chatbot to help
            you select the best movie that fits your preferences.
          </p>
          <ul class="tech-list">
            <li>React</li>
            <li>ExpressJS</li>
            <li>Gemini</li>
            <li>Vite</li>
          </ul>
        </div>
      </div>
    </li>

    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Blogify</h3>
          <img
            src="Blogify.PNG"
            alt="Blogify screenshot"
            class="project-image"
          />
          <p>
            Blogify is a social network created to learn different technologies
            and practice implementing CRUD operations, drawing inspiration from
            X. <br /> It uses Java Spring Boot, JPA, and JWT authentication on the
            backend, deployed on Render using Docker.<br /> It also allows user registration
            and the posting of blog entries.
          </p>
          <ul class="tech-list">
            <li>React</li>
            <li>Spring Boot</li>
            <li>PostgreSQL</li>
            <li>JWT</li>
            <li>Docker</li>
          </ul>
        </div>
      </div>
    </li>
  </ul>
</section>

<div class="modal" id="imageModal">
  <div class="modal-content">
    <span class="modal-close">&times;</span>
    <img id="modalImage" alt="Full-size image" />
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sliderContainers = document.querySelectorAll(".slider-container");
    const modal = document.getElementById("imageModal");
    const modalImage = document.getElementById("modalImage");
    const closeBtn = modal.querySelector(".modal-close");

    sliderContainers.forEach((container) => {
      const track = container.querySelector(".slider-track");
      const slides = Array.from(track.querySelectorAll(".slider-item img"));

      let isDragging = false;
      let startX = 0;
      let currentTranslate = 0;
      let prevTranslate = 0;
      let currentIndex = 0;
      let slideWidth = 0;

      // Variables para distinguir click de drag
      let dragThreshold = 5; // px
      let initialX = 0;
      let movedDistance = 0;
      let clickedImage = null;

      function recalculateSlideWidth() {
        slideWidth = container.clientWidth;
        moveToIndex(currentIndex, false);
      }

      window.addEventListener("load", recalculateSlideWidth);
      window.addEventListener("resize", recalculateSlideWidth);

      container.addEventListener("pointerdown", startDrag);
      container.addEventListener("pointerup", endDrag);
      container.addEventListener("pointerleave", endDrag);
      container.addEventListener("pointermove", drag);

      // Capturamos el img sobre el que se hizo pointerdown para saber en cual se hace click
      container.addEventListener("pointerdown", (e) => {
        if (e.target.tagName === "IMG") {
          clickedImage = e.target;
        } else {
          clickedImage = null;
        }
      });

      function startDrag(e) {
        e.preventDefault();
        container.setPointerCapture(e.pointerId);
        isDragging = true;
        startX = e.clientX;
        initialX = e.clientX;
        track.style.transition = "none";
      }

      function endDrag(e) {
        if (!isDragging) return;
        isDragging = false;

        // Calcular cuanto se movi√≥ el pointer
        movedDistance = Math.abs(e.clientX - initialX);

        // Si se movi√≥ menos que el umbral, consideramos que fue un click, no un drag
        if (movedDistance < dragThreshold && clickedImage) {
          // Abrimos el modal con la imagen clickeada
          modalImage.src = clickedImage.src;
          modal.style.display = "flex";
        } else {
          // Fue un drag normal, calculamos el slide m√°s cercano
          const newIndex = Math.round(Math.abs(currentTranslate) / slideWidth);
          currentIndex = Math.max(
            0,
            Math.min(
              newIndex,
              track.querySelectorAll(".slider-item").length - 1
            )
          );
          moveToIndex(currentIndex);
        }
      }

      function drag(e) {
        if (!isDragging) return;
        const currentX = e.clientX;
        const diff = currentX - startX;
        currentTranslate = prevTranslate + diff;
        track.style.transform = `translateX(${currentTranslate}px)`;
      }

      function moveToIndex(index, withTransition = true) {
        currentTranslate = index * -slideWidth;
        prevTranslate = currentTranslate;
        track.style.transition = withTransition
          ? "transform 0.3s ease"
          : "none";
        track.style.transform = `translateX(${currentTranslate}px)`;
      }
    });

    // Cerrar modal al hacer click en el bot√≥n "X"
    closeBtn.addEventListener("click", () => {
      modal.style.display = "none";
    });

    // Cerrar modal al hacer click fuera del contenido
    modal.addEventListener("click", (e) => {
      if (e.target === modal) {
        modal.style.display = "none";
      }
    });
  });
</script>

<style>
  #projects {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  #projects h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .project-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .project-item {
    margin-bottom: 2rem;
  }

  .project-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  .project-details h3 {
    font-size: 1.5rem;
    margin: 0 0 0.5rem 0;
    font-weight: bold;
  }

  .project-details p {
    margin: 0.5rem 0 1rem 0;
    line-height: 1.4;
  }

  .tech-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-list li {
    background-color: #444;
    color: #fff;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.9rem;
    white-space: nowrap;
  }

  .slider-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    cursor: grab;
    margin-bottom: 1rem;
    touch-action: none;
    max-height: 600px;
  }

  .slider-item {
    flex-shrink: 0;
    position: relative;
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    padding: 0;
  }

  .slider-item img {
    display: block;
    width: 100%;
    height: auto;
    object-fit: contain;
  }

  .slider-container:active {
    cursor: grabbing;
  }

  .slider-track {
    display: flex;
    will-change: transform;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  @media screen and (max-width: 660px) {
    #projects {
      padding: 1rem;
    }

    .project-header {
      flex-direction: column;
      align-items: center;
    }

    .project-details h3 {
      font-size: 1.3rem;
      text-align: center;
    }

    .project-details p {
      font-size: 0.95rem;
      text-align: center;
    }
    .tech-list {
      justify-content: center;
    }
  }

  .modal {
    display: none; /* Oculto por defecto */
    position: fixed;
    z-index: 9999;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
  }

  .modal-content {
    position: relative;
    max-width: 90%;
    max-height: 90%;
    padding: 1rem;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .modal-content img {
    max-width: 100%;
    max-height: 100%;
    object-fit: contain;
    margin: 0 auto;
  }

  .modal-close {
    position: absolute;
    top: -1rem;
    right: -1rem;
    color: #fff;
    background-color: #000;
    border-radius: 100%;
    height: 2rem;
    width: 2rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: 2rem;
    cursor: pointer;
    transition: all 0.3s;
  }

  .modal-close:hover {
    color: #000;
    background-color: #fff;
  }
</style>
