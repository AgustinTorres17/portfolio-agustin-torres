<section id="projects">
  <h2>Projects üìù</h2>
  <ul class="project-list">
    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Oneplify</h3>
          <div class="slider-container">
            <ul class="slider-track">
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify1.png"
                  alt="Oneplify screenshot 1"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify2.png"
                  alt="Oneplify screenshot 2"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify3.png"
                  alt="Oneplify screenshot 3"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify4.png"
                  alt="Oneplify screenshot 4"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify5.png"
                  alt="Oneplify screenshot 5"
                />
              </li>
              <li class="slider-item">
                <img
                  src="/oneplify/oneplify6.png"
                  alt="Oneplify screenshot 6"
                />
              </li>
            </ul>
          </div>
          <p>
            Oneplify is a web application developed with my Software Engineering
            Project team. <br /> It enables the management of employee leave at GoGrow,
            provides access to their salary history, and allows users to view the
            anniversaries and birthdays of other employees, as well as their current
            status (e.g., whether they are on leave, celebrating a birthday, or marking
            a company anniversary), among many other features.
            <br />My role was Frontend lead. I was in charge of the development
            of the user interface and the integration with the backend.
          </p>
          <ul class="tech-list">
            <li>NextJS</li>
            <li>Typescript</li>
            <li>Ruby On Rails</li>
            <li>PostgreSQL</li>
            <li>Tailwind</li>
          </ul>
        </div>
      </div>
    </li>
    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Peliculeando</h3>
          <img
            src="Webir.webp"
            alt="Peliculeando screenshot"
            class="project-image"
          />
          <p>
            A web page that allows you to search for movies and TV shows by name
            and genre, providing detailed information such as directors, main
            actors, synopsis, and more. <br />It integrates Google‚Äôs Gemini AI
            for personalized movie recommendations, enabling the chatbot to help
            you select the best movie that fits your preferences.
          </p>
          <ul class="tech-list">
            <li>React</li>
            <li>ExpressJS</li>
            <li>Gemini</li>
            <li>Vite</li>
          </ul>
        </div>
      </div>
    </li>
    <li class="project-item">
      <div class="project-header">
        <div class="project-details">
          <h3>Blogify</h3>
          <img
            src="Blogify.PNG"
            alt="Blogify screenshot"
            class="project-image"
          />
          <p>
            Blogify is a social network created to learn different technologies
            and practice implementing CRUD operations, drawing inspiration from
            X. <br /> It uses Java Spring Boot, JPA, and JWT authentication on the
            backend, deployed on Render using Docker.<br /> It also allows user registration
            and the posting of blog entries.
          </p>
          <ul class="tech-list">
            <li>React</li>
            <li>Spring Boot</li>
            <li>PostgreSQL</li>
            <li>JWT</li>
            <li>Docker</li>
          </ul>
        </div>
      </div>
    </li>
  </ul>
</section>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const sliderContainers = document.querySelectorAll(".slider-container");

    sliderContainers.forEach((container) => {
      const track = container.querySelector(".slider-track");
      const slides = Array.from(track.querySelectorAll(".slider-item"));

      let isDragging = false;
      let startX = 0;
      let currentTranslate = 0;
      let prevTranslate = 0;
      let currentIndex = 0;
      let slideWidth = 0;

      // Una vez cargue la ventana, calculamos slideWidth
      window.addEventListener("load", () => {
        // Ahora que todo est√° cargado, el slide deber√≠a tener su ancho final
        slideWidth = slides[0].getBoundingClientRect().width;
      });

      container.addEventListener("pointerdown", startDrag);
      container.addEventListener("pointerup", endDrag);
      container.addEventListener("pointerleave", endDrag);
      container.addEventListener("pointermove", drag);

      function startDrag(e) {
        e.preventDefault();
        container.setPointerCapture(e.pointerId);
        isDragging = true;
        startX = e.clientX;
        track.style.transition = "none";
      }

      function endDrag() {
        if (!isDragging) return;
        isDragging = false;

        // C√°lculo del √≠ndice m√°s cercano
        const newIndex = Math.round(Math.abs(currentTranslate) / slideWidth);
        currentIndex = Math.max(0, Math.min(newIndex, slides.length - 1));

        moveToIndex(currentIndex);
      }

      function drag(e) {
        if (!isDragging) return;
        const currentX = e.clientX;
        const diff = currentX - startX;
        currentTranslate = prevTranslate + diff;
        track.style.transform = `translateX(${currentTranslate}px)`;
      }

      function moveToIndex(index) {
        currentTranslate = index * -slideWidth;
        prevTranslate = currentTranslate;
        track.style.transition = "transform 0.3s ease";
        track.style.transform = `translateX(${currentTranslate}px)`;
      }
    });
  });
</script>

<style>
  #projects {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
  }

  #projects h2 {
    font-size: 2rem;
    margin-bottom: 1rem;
  }

  .project-list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    gap: 2rem;
  }

  .project-item {
    margin-bottom: 2rem;
  }

  .project-header {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  .project-details h3 {
    font-size: 1.5rem;
    margin: 0 0 0.5rem 0;
    font-weight: bold;
  }

  .project-details p {
    margin: 0.5rem 0 1rem 0;
    line-height: 1.4;
  }

  .tech-list {
    list-style: none;
    padding: 0;
    margin: 0;
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .tech-list li {
    background-color: #444;
    color: #fff;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-size: 0.9rem;
    white-space: nowrap;
  }

  .slider-container {
    position: relative;
    overflow: hidden;
    width: 100%;
    cursor: grab;
    margin-bottom: 1rem;
    touch-action: none;
    max-height: 600px;
  }

  .slider-item img {
    display: block;
    width: 100%;
    height: auto;
    object-fit: contain;
  }

  .slider-container:active {
    cursor: grabbing;
  }

  .slider-track {
    display: flex;
    will-change: transform;
    list-style: none;
  }

  .slider-item {
    flex-shrink: 0;
    position: relative;
    box-sizing: border-box;
    /* Aseg√∫rate de que cada slide ocupe todo el ancho del contenedor */
    width: 100%;
    height: 100%; /* El alto puede ser fijo si as√≠ lo prefieres */
    padding: 0; /* Quita el padding si no es necesario */
  }

  @media screen and (max-width: 660px) {
    #projects {
      padding: 1rem;
    }

    .project-header {
      flex-direction: column;
      align-items: center;
    }

    .project-details h3 {
      font-size: 1.3rem;
      text-align: center;
    }

    .project-details p {
      font-size: 0.95rem;
      text-align: center;
    }
  }
</style>
